{
  "compilerOptions": {
    /* Basic Options */
    "lib": [
      "dom",
      "dom.iterable",
      "esnext",
      "es2017"
    ],                                         /* Specify library files to be included in the compilation. */
    "removeComments": true,                    /* Do not emit comments to output. */
    "allowJs": true,                           /* Allow javascript files to be compiled. */
    "declaration": true,                       /* Generates corresponding '.d.ts' file. */
    "module": "commonjs",                      /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "esModuleInterop": true,                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "allowSyntheticDefaultImports": true,      /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "target": "es6",                           /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "noImplicitAny": true,                     /* Raise error on expressions and declarations with an implied 'any' type. */
    "moduleResolution": "node",                /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "sourceMap": true,                         /* Generates corresponding '.map' file. */
    "strict": true,                            /* Enable all strict type-checking options. */
    "outDir": "./dist",                        /* Redirect output structure to the directory. */
    "rootDir": "./src",                        /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    /* Advanced Options */
    "skipLibCheck": true,                     /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true  /* Disallow inconsistently-cased references to the same file. */

    /* Visit https://aka.ms/tsconfig.json to read more about this file */
  },
  "include": ["src"],
  "exclude": [
    "node_modules",
    "dist",
    "**/*.test.ts"
  ]
}
